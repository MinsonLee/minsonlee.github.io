<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MinsonLee</title>
    <description>Welcome To My WebSite !</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Apr 2018 08:37:26 +0800</pubDate>
    <lastBuildDate>Wed, 25 Apr 2018 08:37:26 +0800</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>01.Git的安装</title>
        <description>&lt;h2 id=&quot;1-写在前面的话&quot;&gt;1. 写在前面的话&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;下载地址：&lt;/strong&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git官网&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;a href=&quot;https://git-scm.com/book/zh/v2&quot;&gt;Pro Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里只介绍最简单的安装方法,本系列的重点不在”安装”,如果你连Git的安装都不会,就先学最简单的并学会使用再去深究什么源码编译安装啥的吧！！！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2-在linux下安装git&quot;&gt;2. 在Linux下安装Git&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;查看一下当前系统是否已经安装git:&lt;code class=&quot;highlighter-rouge&quot;&gt;git --version&lt;/code&gt;,如果没版本信息即系统没有附带默认安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-1-包管理工具直接安装&quot;&gt;2-1). 包管理工具直接安装&lt;/h3&gt;
&lt;p&gt;如果你是在CentOS/Fedora上安装,可以直接使用yum:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo yum install git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果是在基于Debian发行版上,尝试用apt-get:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;如果全都不想在安装过程中修改任何东西,请直接在以上安装命令后方加上 -y 参数&lt;/li&gt;
    &lt;li&gt;想了解更多Unix风格系统使用安装工具安装Git的,可以点击&lt;a href=&quot;http://git-scm.com/download/linux&quot;&gt;传送门&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;2-2-源码编译安装&quot;&gt;2-2). 源码编译安装&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;找到你自己想安装的版本:&lt;a href=&quot;https://mirrors.edge.kernel.org/pub/software/scm/git/&quot;&gt;https://mirrors.edge.kernel.org/pub/software/scm/git/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;下载源码
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;wget -P &amp;lt;path&amp;gt; url/xxx.tar.gz &lt;span class=&quot;c&quot;&gt;# 下载你需要安装版本的tar包到指定目录[建议统一规范存放你电脑中下载的tar包]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;解压
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;tar -zxvf xxx.tar.gz -C &amp;lt;path&amp;gt; &lt;span class=&quot;c&quot;&gt;# 解压安装包到指定目录[同样建议规范统一存放]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &amp;lt;path/git-xxx&amp;gt; &lt;span class=&quot;c&quot;&gt;# 进入解压后的目录&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;设置安装配置
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/你想安装到什么位置去
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;安装
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;make &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;设置环境变量
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &quot;export PATH=$PATH:/git安装目录bin所在绝对路径&quot;&amp;gt;&amp;gt;/etc/bashrc # 还有其他的方式可以设置,自定百度
$ source /etc/bashrc # 重新加载一次bashrc文件使得设置生效
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;验证是否安装成功
    &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git --version &lt;span class=&quot;c&quot;&gt;# 有版本信息则证明安装成功&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-在mac下安装git&quot;&gt;3. 在Mac下安装Git&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;下载Git:&lt;a href=&quot;http://git-scm.com/download/mac&quot;&gt;http://git-scm.com/download/mac&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;傻瓜式安装法&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;人穷没在Mac上安装过,如果客官用的是苹果自行百度一下吧,觉得本文有用顺便请打赏一下,哈哈哈～&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-在windows下安装git&quot;&gt;4. 在Windows下安装Git&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;点击&lt;a href=&quot;https://git-scm.com/download/win&quot;&gt;此处&lt;/a&gt;下载Git&lt;/li&gt;
  &lt;li&gt;“傻瓜式下一步安装法”安装即可！&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 24 Apr 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/04/01.Git%E7%9A%84%E5%AE%89%E8%A3%85/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/04/01.Git%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
        
        <category>Git</category>
        
        
      </item>
    
      <item>
        <title>00.Git问世</title>
        <description>&lt;h2 id=&quot;1什么是版本控制&quot;&gt;1.什么是”版本控制”？&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;确保不同人所编辑的同一东西能集体得到更新，并在必要时候可以对没一个修改状态进行：查看、恢复&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2为什么会有版本控制系统&quot;&gt;2.为什么会有”版本控制系统”?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;“工具”的产生都是为了解决”生产”上的烦恼&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;你可以想象一下现在你要写“毕业论文”或者你老板叫你改一个“还没有拿定主意”的设计稿？你可能会频繁修改很多个版本，修改过程中你会频繁的：删除、修改、增加，你也不确定到底最终那个版本会是你需要的？你要怎么做？
    &lt;ul&gt;
      &lt;li&gt;每一个版本都复制一份完整的”资料”，或者把每个版本之间的差异都记录保存起来就可以了！&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;保存版本太多了，你怎么知道自己保存的东西到底是什么呢？
    &lt;ul&gt;
      &lt;li&gt;你可以再回过头去看每一个版本的”资料”,或者在命名的时候定义一个”完美”的规则,你能够通俗易懂的规则&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;如果是有很多个人和你一起完成手里的工作呢？如何防止命名的重复？如何防止相互修改的东西进行覆盖了?……
    &lt;ul&gt;
      &lt;li&gt;各自复制+重命名版本号：名字混乱(起名字真的很难起)、被覆盖了就”完蛋”了、不能协作&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;你所能想到的问题，肯定是有方法可以解决的！但是如果有一个工具可以帮你完成以上的问题，何乐而不为呢？i&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;3版本系统的几个重要代表和节点&quot;&gt;3.版本系统的几个重要”代表”和”节点”&lt;/h2&gt;
&lt;h3 id=&quot;1-本地版本系统rcs&quot;&gt;1. 本地版本系统:RCS&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;解决了当时的需求，但是随着需求的复杂，缺点也突显出来了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;类似”系统补丁”，在硬盘上保存”差集”，回退时进行大量计算比较得出不同&lt;/li&gt;
  &lt;li&gt;不能协作，个人电脑容易”犯傻”，遇到了问题：如何让不同人在不同系统上的开发者协同工作？&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2集中式版本管理cvssvncvs的进阶产品&quot;&gt;2.集中式版本管理:CVS、SVN(CVS的进阶产品)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;解决了本地版本系统遗留的问题,但是随着时间推移,现在缺点也逐渐突显出来了,尽管还有比较多企业在用着SVN&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;有一个单一的集中管理的服务器，保存所有文件的修订版本与版本之间的差异&lt;/li&gt;
  &lt;li&gt;协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新&lt;/li&gt;
  &lt;li&gt;需要回退版本或者跟新时候,工具通过算法回溯的去计算,恢复到指定版本状态的”资料”&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;但是如果”中心服务器”宕机了,那么意味着所有人都不能拉取、更新、比较历史版本差异…..,所有人都要停下等中心机器恢复工作！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;3分布式版本管理gitbazaar&quot;&gt;3.分布式版本管理:Git、Bazaar&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;尽管这一点不是所有分布式版本管理工具的特征,但这是绝大多书分布式管理工具共有的方式,&lt;/li&gt;
  &lt;li&gt;分布式客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;将整个仓库克隆下来，那么就不怕任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复&lt;/li&gt;
    &lt;li&gt;许多这类系统都可以指定和若干不同的远端代码仓库进行交互,当需要的时候才进行推送,不需要推送的时候你可以照常在本地进行代码:比较差异、分支切换、检出历史版本代码……&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4为什么会有git&quot;&gt;4.为什么会有”Git”?&lt;/h2&gt;
&lt;p&gt;因为2005年，BitKeeper的商业公司与Linux内核开源社区的合作关系结束，Linux之父一气之下开发了自己的版本控制系统，虽然网上说了很多种，但是不管到底那个才是正确的，最后要求设计出来的版本控制系统满足以下要求：&lt;/p&gt;
&lt;blockquote&gt;

  &lt;ul&gt;
    &lt;li&gt;速度&lt;/li&gt;
    &lt;li&gt;安全&lt;/li&gt;
    &lt;li&gt;简单的设计&lt;/li&gt;
    &lt;li&gt;对非线性开发模式的强力支持(允许成千上万的分支并行开发)&lt;/li&gt;
    &lt;li&gt;完全分布式&lt;/li&gt;
    &lt;li&gt;有能力高效的管理类似Linux内核一样的超大规模项目(速度与数据量)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 23 Apr 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/04/00.Git%E9%97%AE%E4%B8%96/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/04/00.Git%E9%97%AE%E4%B8%96/</guid>
        
        <category>Git</category>
        
        
      </item>
    
  </channel>
</rss>
